This memo is about how to use LWJGL(Light Weight Java Game Library)
It contains lots of sub-library(if you want you can customize it yourself)

1. setting up
download lwjgl -> 
create library folder -> 
copy all jar file to lib folder -> 
add it to the build path(easy!!)
//actually we don't need whole jar files to follow this course

2. basic form of using glfw

public class Test{
	
	public static void main(String[] args) {
		if(!glfwInit()) {
			throw new IllegalStateException("Failed to initialize GLFW");
		} // init glfw Window
		
		long window = glfwCreateWindow(640, 480, "MY LWJGL Program", 0, 0); // create window
		if(window == 0) {
			throw new IllegalStateException("Failed to create window");
		}
		
		GLFWVidMode videoMode = glfwGetVideoMode(glfwGetPrimaryMonitor()); // set videoMode
		glfwSetWindowPos(window,(videoMode.width() - 640)/2, (videoMode.height() - 480)/2); // set Window Pos
		
		glfwShowWindow(window); // Show it any way
		
		while(!glfwWindowShouldClose(window)) {
			glfwPollEvents(); // update the state
		}
		
		glfwTerminate();
	}

}

3. moer proper way to use glfw

import org.lwjgl.opengl.GL;
import static org.lwjgl.opengl.GL11.*;
import org.lwjgl.glfw.GLFWVidMode;

public class Test{
	
	public static void main(String[] args) {
		if(!glfwInit()) {
			System.err.println("Failed to init GLFW");
			System.exit(1);
		}
		
		long window = glfwCreateWindow(640, 480, "MY LWJGL Program", 0, 0);
		if(window == 0) {
			System.err.println("Failed to create window");
			System.exit(1);
		}
		
		GLFWVidMode videoMode = glfwGetVideoMode(glfwGetPrimaryMonitor());
		glfwSetWindowPos(window,(videoMode.width() - 640)/2, (videoMode.height() - 480)/2);
		
		glfwShowWindow(window);
		
		glfwMakeContextCurrent(window);
		
		GL.createCapabilities(); // GL for actually making image 
		
		while(!glfwWindowShouldClose(window)) {
			glfwPollEvents();
			
			glClear(GL_COLOR_BUFFER_BIT);
			
			glBegin(GL_QUADS); // actually not popper way to make image, later on gonna learn how to deal with making image using opengl
			glColor4f(1, 0, 0, 0);
			glVertex2f(-0.5f, 0.5f);
			glColor4f(0, 1, 0, 0);
			glVertex2f(0.5f, 0.5f);
			glColor4f(0, 0, 1, 0);
			glVertex2f(0.5f, -0.5f);
			glColor4f(1, 1, 1, 0);
			glVertex2f(-0.5f, -0.5f);
			glEnd();
			
			glfwSwapBuffers(window);
		}
		
		glfwTerminate();
	}

}

4. get key state
	glfw provide GL_VARIABLE(very important)
	glfwGetKey(window, KEY YOU WANT TO GET)
	glfwGetMouseButton(window, MOUSE STATE) // glfw provide lots of functions getting input
	
5. how to use texture = big set of how to color the objects
public class Texture {
	private int id;
	private int height;
	private int width;
	
	public Texture(String filename) {
		BufferedImage bi;
		
		try {
			bi = ImageIO.read(new File(filename));
			width = bi.getWidth();
		    height = bi.getHeight();
		    
		    int[] pixels_raw = new int[height*width*4];
		    pixels_raw = bi.getRGB(0, 0, width, height, null, 0, width);
		    
		    ByteBuffer pixels = BufferUtils.createByteBuffer(width*height*4);
		    
		    for(int i = 0; i < height; i++) {
		    	for(int j = 0; j < width; j++) {
			    	int pixel = pixels_raw[i*width + j];
			    	pixels.put((byte)((pixel >> 16)&0xFF));
			    	pixels.put((byte)((pixel >> 8)&0xFF));
			    	pixels.put((byte)((pixel >> 0)&0xFF));
			    	pixels.put((byte)((pixel >> 24)&0xFF));
			    }
		    }
		    
		    pixels.flip();
		    
		    id = glGenTextures();
		    
		    glBindTexture(GL_TEXTURE_2D, id);
		    
		    glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
		    glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);
		    
		    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, pixels);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void bind() {
		glBindTexture(GL_TEXTURE_2D, id);
	}
	
	public void unbind() {
		glBindTexture(GL_TEXTURE_2D, 0);
	}
}

when actually use texture to draw things those functions needed
glTexCoord2d()
glEnable()
